import 'dart:async';
import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: WelcomeScreen(),
    );
  }
}

class WelcomeScreen extends StatelessWidget {
  const WelcomeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final TextEditingController nameController = TextEditingController();

    return Scaffold(
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [Color(0xFF00008B), Colors.white], // To'q ko'k va oq ranglar
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
          ),
        ),
        padding: const EdgeInsets.all(16.0),
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Text(
                "NowNew yangiliklariga xush kelibsiz!",
                style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 20),
              TextField(
                controller: nameController,
                style: const TextStyle(color: Colors.white), // Matn oq rangda
                decoration: const InputDecoration(
                  labelText: 'Ismingizni kiriting',
                  labelStyle: TextStyle(color: Colors.white), // Label oq rangda
                  border: OutlineInputBorder(),
                ),
              ),
              const SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  String name = nameController.text;

                  Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(
                      builder: (context) => HomePage(name: name),
                    ),
                  );
                },
                child: const Text('Kirish'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class HomePage extends StatefulWidget {
  final String name;

  const HomePage({super.key, required this.name});

  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  final TextEditingController _searchController = TextEditingController();
  final List<Map<String, dynamic>> newsList = [
    {
      "title": "Toshkentda 29 -30 va 31 yanvar kunlari qor yog'ishi kutilmoqda",
      "image": "https://yuz.uz/imageproxy/1200x/https://yuz.uz/file/news/c567a3161d05a6177e9b920c7c77bdf8.jpg",
      "likes": 0,
      "dislikes": 0,
      "comments": [],
      "time": "2 soat oldin",
      "url": "https://yuz.uz/news/toshkentda-qor-yogishi"
    },
    {
      "title": "Ilon musk telefon ishlab chiqarmoqchi",
      "image": "https://miro.medium.com/v2/resize:fit:1148/0*JgLoF5wzbkXvOZnH.jpg",
      "likes": 0,
      "dislikes": 0,
      "comments": [],
      "time": "3 soat oldin",
      "url": "https://medium.com/elon-musk-telefon"
    },
    {
      "title": "Tik tok endi rostaniga AQSh da yopildi !",
      "image": "https://images.theconversation.com/files/582275/original/file-20240315-26-rjm6wo.jpg?ixlib=rb-4.1.0&rect=0%2C287%2C5333%2C2666&q=45&auto=format&w=1356&h=668&fit=crop",
      "likes": 0,
      "dislikes": 0,
      "comments": [],
      "time": "4 soat oldin",
      "url": "https://theconversation.com/tiktok-yopildi"
    },
    {
      "title": "Yangi texnologiyalar yarmarkasi boshlandi",
      "image": "https://example.com/image4.jpg",
      "likes": 0,
      "dislikes": 0,
      "comments": [],
      "time": "5 soat oldin",
      "url": "https://example.com/texnologiyalar-yarmarkasi"
    },
    {
      "title": "O'zbekistonda yangi startaplar paydo bo'ldi",
      "image": "https://example.com/image5.jpg",
      "likes": 0,
      "dislikes": 0,
      "comments": [],
      "time": "6 soat oldin",
      "url": "https://example.com/startaplar"
    },
    {
      "title": "Dunyo bo'ylab yangi ilovalar ommalashmoqda",
      "image": "https://example.com/image6.jpg",
      "likes": 0,
      "dislikes": 0,
      "comments": [],
      "time": "7 soat oldin",
      "url": "https://example.com/ilovalar"
    },
  ];

  List<Map<String, dynamic>> filteredNewsList = [];
  Timer? _timer;

  @override
  void initState() {
    super.initState();
    filteredNewsList = newsList;
    _startTimer();
  }

  @override
  void dispose() {
    _timer?.cancel();
    _searchController.dispose();
    super.dispose();
  }

  void _startTimer() {
    _timer = Timer.periodic(const Duration(hours: 4), (timer) {
      _updateNewsList();
    });
  }

  void _updateNewsList() {
    setState(() {
      newsList.shuffle();
      filteredNewsList = newsList;
    });
  }

  void updateReaction(int index, bool isLike) {
    setState(() {
      if (isLike) {
        filteredNewsList[index]["likes"]++;
      } else {
        filteredNewsList[index]["dislikes"]++;
      }
    });
  }

  void filterNews(String query) {
    setState(() {
      filteredNewsList = newsList
          .where((news) => news["title"]
          .toLowerCase()
          .contains(query.toLowerCase()))
          .toList();
    });
  }

  void addComment(int index) {
    TextEditingController commentController = TextEditingController();
    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: const Text('Add Comment'),
          content: TextField(
            controller: commentController,
            decoration: const InputDecoration(hintText: 'Write your comment here...'),
          ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.of(context).pop();
              },
              child: const Text('Cancel'),
            ),
            TextButton(
              onPressed: () {
                setState(() {
                  filteredNewsList[index]["comments"].add(commentController.text);
                });
                Navigator.of(context).pop();
              },
              child: const Text('Add'),
            ),
          ],
        );
      },
    );
  }

  void _launchURL(String url) async {
    final Uri uri = Uri.parse(url);
    if (await canLaunchUrl(uri)) {
      await launchUrl(uri);
    } else {
      throw 'Could not launch $url';
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        flexibleSpace: Container(
          decoration: const BoxDecoration(
            gradient: LinearGradient(
              colors: [Color(0xFF00008B), Colors.white], // To'q ko'k va och oq ranglar
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
            ),
          ),
        ),
        title: TextField(
          controller: _searchController,
          style: const TextStyle(color: Colors.white),
          decoration: const InputDecoration(
            hintText: 'Search...',
            hintStyle: TextStyle(color: Colors.white54),
            border: InputBorder.none,
          ),
          maxLines: 2,
          onChanged: (value) {
            filterNews(value);
          },
        ),
        actions: [
          IconButton(
            icon: const Icon(Icons.search, color: Colors.white),
            onPressed: () {
              showSearch(
                context: context,
                delegate: NewsSearchDelegate(newsList),
              );
            },
          ),
        ],
      ),
      drawer: Drawer(
        child: Container(
          decoration: const BoxDecoration(
            gradient: LinearGradient(
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
              colors: [Colors.purple, Colors.blue, Colors.green, Colors.orange],
            ),
          ),
          child: SafeArea(
            child: Column(
              children: [
                const CircleAvatar(
                  backgroundColor: Colors.white,
                  backgroundImage: NetworkImage(
                      "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pierre-Person.jpg"),
                  radius: 60,
                ),
                const SizedBox(height: 20),
                Text(
                  widget.name,
                  style: const TextStyle(
                      fontSize: 30,
                      color: Colors.white,
                      fontWeight: FontWeight.bold),
                ),
                const Divider(color: Colors.white),
                ListTile(
                  leading: const Icon(Icons.home, color: Colors.white),
                  title: const Text("Home", style: TextStyle(color: Colors.white)),
                  onTap: () {},
                ),
                ListTile(
                  leading: const Icon(Icons.settings, color: Colors.white),
                  title: const Text("Settings", style: TextStyle(color: Colors.white)),
                  onTap: () {},
                ),
                ListTile(
                  leading: const Icon(Icons.logout, color: Colors.white),
                  title: const Text("Logout", style: TextStyle(color: Colors.white)),
                  onTap: () {},
                ),
                const Divider(color: Colors.white),
                ListTile(
                  leading: const Icon(Icons.telegram, color: Colors.white),
                  title: const Text("Telegram Channel", style: TextStyle(color: Colors.white)),
                  onTap: () {
                    launchURL("https://t.me/nownewsuz");
                  },
                ),
                const Divider(color: Colors.white),
                ListTile(
                  leading: const Icon(Icons.help, color: Colors.white),
                  title: const Text("Helper", style: TextStyle(color: Colors.white)),
                  onTap: () {
                    // Helper widget action
                  },
                ),
              ],
            ),
          ),
        ),
      ),
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            colors: [Colors.black, Colors.blue],
          ),
        ),
        child: GridView.builder(
          padding: const EdgeInsets.all(10),
          gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 3, // 3 qatorlik qilish
            crossAxisSpacing: 10,
            mainAxisSpacing: 10,
            childAspectRatio: 0.8, // Kartalarni kattalashtirish
          ),
          itemCount: filteredNewsList.length,
          itemBuilder: (context, index) {
            return Card(
              color: Colors.white,
              child: Column(
                children: [
                  Image.network(
                    filteredNewsList[index]["image"],
                    height: 100, // Rasm balandligini kattalashtirish
                    fit: BoxFit.cover,
                  ),
                  Padding(
                    padding: const EdgeInsets.all(10.0),
                    child: Text(
                      filteredNewsList[index]["title"],
                      style: const TextStyle(
                          fontSize: 20, fontWeight: FontWeight.bold),
                    ),
                  ),
                  Text(
                    filteredNewsList[index]["time"],
                    style: const TextStyle(color: Colors.grey),
                  ),
                  TextButton(
                    onPressed: () => _launchURL(filteredNewsList[index]["url"]),
                    child: const Text('Batafsil'),
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                      IconButton(
                        icon: const Icon(Icons.thumb_up, color: Colors.green),
                        onPressed: () => updateReaction(index, true),
                      ),
                      Text("${filteredNewsList[index]["likes"]} Likes"),
                      IconButton(
                        icon: const Icon(Icons.thumb_down, color: Colors.red),
                        onPressed: () => updateReaction(index, false),
                      ),
                      Text("${filteredNewsList[index]["dislikes"]} Dislikes"),
                    ],
                  ),
                  IconButton(
                    icon: const Icon(Icons.comment, color: Colors.blue),
                    onPressed: () => addComment(index),
                  ),
                  const SizedBox(height: 10),
                ],
              ),
            );
          },
        ),
      ),
    );
  }
}

class NewsSearchDelegate extends SearchDelegate {
  final List<Map<String, dynamic>> newsList;

  NewsSearchDelegate(this.newsList);

  @override
  List<Widget>? buildActions(BuildContext context) {
    return [
      IconButton(
        icon: const Icon(Icons.clear),
        onPressed: () {
          query = '';
        },
      ),
    ];
  }

  @override
  Widget? buildLeading(BuildContext context) {
    return IconButton(
      icon: const Icon(Icons.arrow_back),
      onPressed: () {
        close(context, null);
      },
    );
  }

  @override
  Widget buildResults(BuildContext context) {
    final results = newsList
        .where((news) => news["title"].toLowerCase().contains(query.toLowerCase()))
        .toList();

    return ListView.builder(
      itemCount: results.length,
      itemBuilder: (context, index) {
        return ListTile(
          title: Text(results[index]["title"]),
          leading: Image.network(results[index]["image"]),
        );
      },
    );
  }

  @override
  Widget buildSuggestions(BuildContext context) {
    final suggestions = newsList
        .where((news) => news["title"].toLowerCase().contains(query.toLowerCase()))
        .toList();

    return ListView.builder(
      itemCount: suggestions.length,
      itemBuilder: (context, index) {
        return ListTile(
          title: Text(suggestions[index]["title"]),
          leading: Image.network(suggestions[index]["image"]),
        );
      },
    );
  }
}

void launchURL(String url) async {
  final Uri uri = Uri.parse(url);
  if (await canLaunchUrl(uri)) {
    await launchUrl(uri);
  } else {
    throw 'Could not launch $url';
  }
}
